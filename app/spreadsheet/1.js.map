{
  "version": 3,
  "file": "1.js",
  "sources": [
    "/app/spreadsheet/1.tsx"
  ],
  "sourcesContent": [
    "import { makeInit } from \"../lib/init\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nconst xNames = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\nconst cellIds: string[] = [];\nfor (let y = 1; y <= 10; y++) {\n\tfor (const x of xNames.slice(0, 10)) {\n\t\tcellIds.push(`${x}${y}`);\n\t}\n}\nconst startCells = Object.fromEntries(cellIds.map((id) => [id, \"\"]));\nstartCells.A1 = \"1\";\nstartCells.B1 = \"2\";\nstartCells.C1 = \"A1 + B1\";\n\nconst AsyncFunction = async function () {}.constructor;\n\nfunction useSheetNaiveAf() {\n\tconst [sheet, setSheet] = useState(startCells);\n\n\tconst cellUpdaterFactory = useCallback(\n\t\t(id: string) => {\n\t\t\treturn (v: string) => {\n\t\t\t\tsetSheet({\n\t\t\t\t\t...sheet,\n\t\t\t\t\t[id]: v,\n\t\t\t\t});\n\t\t\t};\n\t\t},\n\t\t[sheet],\n\t);\n\n\tconst [computedSheet, setComputedSheet] = useState(null);\n\tuseEffect(() => {\n\t\tconst computers = {};\n\t\tconst computingComputers = {};\n\t\tfor (let [it, code] of Object.entries(sheet)) {\n\t\t\tif (code.trim() === \"\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (const cellId of cellIds) {\n\t\t\t\tcode = code.replace(cellId, `(await (cc.${cellId} ??= c.${cellId}(c, cc)))`);\n\t\t\t}\n\t\t\tconsole.log(it, code);\n\t\t\ttry {\n\t\t\t\tcomputers[it] = new AsyncFunction(\"c\", \"cc\", `try { return ${code} } catch (e) { return NaN }`);\n\t\t\t} catch (e) {\n\t\t\t\tcomputers[it] = async () => NaN;\n\t\t\t}\n\t\t}\n\t\tPromise.all(\n\t\t\tObject.entries(computers).map(async ([id, computer]) => [\n\t\t\t\tid,\n\t\t\t\tawait (computingComputers[id] ??= computer(computers, computingComputers)),\n\t\t\t]),\n\t\t).then((values) => {\n\t\t\tconst coolSheet = Object.fromEntries(values);\n\t\t\tsetComputedSheet(coolSheet);\n\t\t\tconsole.log(\"we computed this:\", coolSheet);\n\t\t});\n\t}, [sheet]);\n\n\treturn {\n\t\tsheet,\n\t\tcomputedSheet,\n\t\tcellUpdaterFactory,\n\t};\n}\n\ninterface CellProps {\n\tid: string;\n\tsheet: Record<string, string>;\n\tcomputedSheet?: Record<string, unknown>;\n\tsetValue: (v: string) => void;\n}\nfunction Cell({ id, sheet, computedSheet, setValue }: CellProps) {\n\tconst value = sheet[id];\n\tlet computedValue;\n\tif (!computedSheet) {\n\t\tcomputedValue = \"...\";\n\t} else {\n\t\tconst cv = computedSheet[id];\n\t\tif (cv === undefined) {\n\t\t\tcomputedValue = \"\";\n\t\t} else if (cv !== cv) {\n\t\t\tcomputedValue = \"NaN\";\n\t\t} else {\n\t\t\tcomputedValue = JSON.stringify(computedSheet[id]);\n\t\t}\n\t}\n\t// const inputRef = useRef<HTMLInputElement>(null);\n\tconst [hasFocus, setHasFocus] = useState(false);\n\n\tconst valueToShow = hasFocus ? value : computedValue;\n\n\treturn (\n\t\t<input\n\t\t\tid={id}\n\t\t\ttitle={id}\n\t\t\tclassName=\"cell\"\n\t\t\tonKeyUp={(e) => {\n\t\t\t\tif (e.key === \"Enter\") {\n\t\t\t\t\tconst cellBelow = id[0] + (parseInt(id.slice(1)) + 1);\n\t\t\t\t\tconst cellAbove = id[0] + (parseInt(id.slice(1)) - 1);\n\t\t\t\t\tconst cell = e.shiftKey ? cellAbove : cellBelow;\n\t\t\t\t\t// this is not react-like at all lol\n\t\t\t\t\tdocument.querySelector(`#${cell}`)?.focus();\n\t\t\t\t}\n\t\t\t}}\n\t\t\tonChange={(e) => {\n\t\t\t\tsetValue(e.target.value);\n\t\t\t}}\n\t\t\tvalue={valueToShow}\n\t\t\tonFocus={() => setHasFocus(true)}\n\t\t\tonBlur={() => setHasFocus(false)}\n\t\t/>\n\t);\n}\n\nfunction Spreadsheet() {\n\tconst { sheet, computedSheet, cellUpdaterFactory } = useSheetNaiveAf();\n\tconst cellNodes = cellIds.map((id) => (\n\t\t<Cell\n\t\t\tid={id}\n\t\t\tkey={id}\n\t\t\tsheet={sheet}\n\t\t\tcomputedSheet={computedSheet}\n\t\t\tsetValue={useCallback(cellUpdaterFactory(id), [id, sheet])}\n\t\t/>\n\t));\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"spreadsheet\">{cellNodes}</div>\n\t\t</div>\n\t);\n}\n\nexport default makeInit(Spreadsheet);\n"
  ],
  "names": [
    "useState",
    "useCallback",
    "useEffect",
    "jsx"
  ],
  "mappings": "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"
}